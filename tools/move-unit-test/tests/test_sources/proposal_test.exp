Running Move unit tests
[ PASS    ] 0x1::Module::other_module_aborts
[ PASS    ] 0x1::Module::tests_a
[ PASS    ] 0x1::Module::tests_aborts
[ PASS    ] 0x1::Module::tests_b
[ PASS    ] 0x1::Module::tests_c
[ FAIL    ] 0x1::Module::tests_d
0x1::Module::other_module_aborts
Output: Ok("")
0x1::Module::tests_a
Output: Ok("")
0x1::Module::tests_aborts
Output: Ok("")
0x1::Module::tests_b
Output: Ok("0x1:\n\t=> key 0x1::Module::A {\n\t    t: 5\n\t}\n0x2:\n\t=> key 0x1::Module::A {\n\t    t: 5\n\t}\n")
0x1::Module::tests_c
Output: Ok("0x1:\n\t=> key 0x1::Module::A {\n\t    t: 5\n\t}\n0x2:\n\t=> key 0x1::Module::A {\n\t    t: 6\n\t}\n")
0x1::Module::tests_d
Output: Ok("0x1:\n\t=> key 0x1::Module::B<u64> {\n\t    t: 5\n\t}\n0x2:\n\t=> key 0x1::Module::B<bool> {\n\t    t: 6\n\t}\n\t=> key 0x1::Module::B<u64> {\n\t    t: 5\n\t}\n\t=> key 0x1::Module::B<0x1::Module::C<u64>> {\n\t    t: 5\n\t}\n")

Test failures:

Failures in 0x1::Module:

┌── tests_d ──────
│ error[E11001]: test failure
│     ┌─ proposal_test.move:102:9
│     │
│  95 │     fun tests_d(a1: signer, a2: signer)
│     │         ------- In this function in 0x1::Module
│     ·
│ 102 │         assert!(d<u64>(@0x2, 6), 3);
│     │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Test was not expected to error, but it aborted with code 3 originating in the module 0000000000000000000000000000000000000000000000000000000000000001::Module rooted here
│ 
│ 
└──────────────────

Test result: FAILED. Total tests: 6; passed: 5; failed: 1
